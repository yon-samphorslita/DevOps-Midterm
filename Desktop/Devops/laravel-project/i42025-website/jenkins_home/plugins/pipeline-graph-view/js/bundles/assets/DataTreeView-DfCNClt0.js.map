{"version":3,"file":"DataTreeView-DfCNClt0.js","sources":["../../../../frontend/common/components/filter.tsx","../../../../frontend/pipeline-console-view/pipeline-console/main/DataTreeView.tsx"],"sourcesContent":["import Tippy from \"@tippyjs/react\";\nimport React, { useState } from \"react\";\nimport Tooltip from \"./tooltip.tsx\";\nimport StatusIcon from \"./status-icon.tsx\";\nimport { Result } from \"../../pipeline-graph-view/pipeline-graph/main/index.ts\";\nimport { classNames } from \"../utils/classnames.ts\";\nimport \"./filter.scss\";\nimport { useFilter } from \"../../pipeline-console-view/pipeline-console/main/providers/filter-provider.tsx\";\nimport { DefaultDropdownProps } from \"./dropdown.tsx\";\n\nexport default function Filter({ disabled }: FilterProps) {\n  const [visible, setVisible] = useState(false);\n  const { visibleStatuses, toggleStatus, resetStatuses, allVisible } =\n    useFilter();\n\n  const statuses = [\n    {\n      key: \"running\",\n      text: \"Running\",\n      status: Result.running,\n    },\n    {\n      key: \"success\",\n      text: \"Successful\",\n      status: Result.success,\n    },\n    {\n      key: \"failure\",\n      text: \"Failed\",\n      status: Result.failure,\n    },\n    {\n      key: \"unstable\",\n      text: \"Unstable\",\n      status: Result.unstable,\n    },\n    {\n      key: \"aborted\",\n      text: \"Aborted\",\n      status: Result.aborted,\n    },\n    {\n      key: \"skipped\",\n      text: \"Skipped\",\n      status: Result.skipped,\n    },\n    {\n      key: \"not_built\",\n      text: \"Not built\",\n      status: Result.not_built,\n    },\n  ];\n\n  const show = () => setVisible(true);\n  const hide = () => setVisible(false);\n\n  return (\n    <Tooltip content={\"Filter\"}>\n      <Tippy\n        {...DefaultDropdownProps}\n        visible={visible}\n        onClickOutside={hide}\n        placement=\"bottom\"\n        appendTo={document.body}\n        offset={[0, -1]}\n        content={\n          <div className=\"jenkins-dropdown\">\n            <div className=\"jenkins-dropdown__heading\">\n              Filter\n              {!allVisible && (\n                <button\n                  className={\n                    \"jenkins-button jenkins-button--tertiary jenkins-!-accent-color pgv-reset-button\"\n                  }\n                  onClick={resetStatuses}\n                >\n                  Reset\n                </button>\n              )}\n            </div>\n            {statuses.map((item, index) => (\n              <button\n                key={index}\n                className={classNames(\n                  \"jenkins-dropdown__item\",\n                  \"pgv-filter-button\",\n                  {\n                    \"pgv-filter-button--unchecked\": !visibleStatuses.includes(\n                      item.status,\n                    ),\n                  },\n                )}\n                onClick={() => toggleStatus(item.status)}\n              >\n                <div className=\"jenkins-dropdown__item__icon\">\n                  <StatusIcon\n                    status={item.status}\n                    skeleton={!visibleStatuses.includes(item.status)}\n                    percentage={0}\n                  />\n                </div>\n                {item.text}\n              </button>\n            ))}\n          </div>\n        }\n      >\n        <button\n          className={classNames(\n            \"jenkins-button\",\n            {\n              \"jenkins-button--tertiary\": allVisible,\n            },\n            {\n              \"jenkins-!-accent-color\": !allVisible,\n            },\n          )}\n          type=\"button\"\n          disabled={disabled}\n          onClick={visible ? hide : show}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n            <path\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={!allVisible ? 42 : 36}\n              d=\"M32 144h448M112 256h288M208 368h96\"\n            />\n          </svg>\n        </button>\n      </Tippy>\n    </Tooltip>\n  );\n}\n\ninterface FilterProps {\n  disabled?: boolean;\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Result,\n  StageInfo,\n} from \"../../../pipeline-graph-view/pipeline-graph/main/index.ts\";\nimport \"./data-tree-view.scss\";\nimport { Total } from \"../../../common/utils/timings.tsx\";\nimport StatusIcon from \"../../../common/components/status-icon.tsx\";\nimport { classNames } from \"../../../common/utils/classnames.ts\";\nimport Filter from \"../../../common/components/filter.tsx\";\nimport { useFilter } from \"./providers/filter-provider.tsx\";\n\nexport default function DataTreeView({\n  stages,\n  selected,\n  onNodeSelect,\n}: DataTreeViewProps) {\n  const { search, setSearch, visibleStatuses } = useFilter();\n  const filteredStages = filterStageTree(search, visibleStatuses, stages);\n\n  const handleSelect = useCallback(\n    (event: React.MouseEvent, nodeId: string) => {\n      onNodeSelect(event, nodeId);\n    },\n    [onNodeSelect],\n  );\n\n  return (\n    <div>\n      <div className={\"pgw-filter-bar\"}>\n        <div className=\"jenkins-search\">\n          <div className=\"jenkins-search__icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n              <path\n                d=\"M221.09 64a157.09 157.09 0 10157.09 157.09A157.1 157.1 0 00221.09 64z\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeMiterlimit=\"10\"\n                strokeWidth=\"32\"\n              />\n              <path\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeMiterlimit=\"10\"\n                strokeWidth=\"32\"\n                d=\"M338.29 338.29L448 448\"\n              />\n            </svg>\n          </div>\n          <input\n            className=\"jenkins-input jenkins-search__input\"\n            placeholder=\"Search\"\n            type=\"search\"\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n            spellCheck=\"false\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n        </div>\n        <Filter />\n      </div>\n\n      {filteredStages.length === 0 && (\n        <div className={\"jenkins-notice\"}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n            <path\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={36}\n              d=\"M32 144h448M112 256h288M208 368h96\"\n            />\n          </svg>\n          <div>No stages</div>\n        </div>\n      )}\n\n      <div id=\"tasks\" style={{ marginLeft: \"0.7rem\" }}>\n        {filteredStages.map((stage) => (\n          <TreeNode\n            key={stage.id}\n            stage={stage}\n            selected={String(selected)}\n            onSelect={handleSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst TreeNode = React.memo(({ stage, selected, onSelect }: TreeNodeProps) => {\n  const { search, visibleStatuses, allVisible } = useFilter();\n  const hasChildren = stage.children && stage.children.length > 0;\n  const isSelected = String(stage.id) === selected;\n  const [isExpanded, setIsExpanded] = useState<boolean>(\n    hasSelectedDescendant(stage),\n  );\n\n  function hasSelectedDescendant(stage: StageInfo): boolean {\n    return stage.children?.some(\n      (child) => String(child.id) === selected || hasSelectedDescendant(child),\n    );\n  }\n\n  const handleToggleClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    setIsExpanded(!isExpanded);\n  };\n\n  useEffect(() => {\n    if (search.length || !allVisible) {\n      if (filterStageTree(search, visibleStatuses, [stage]).length !== 0) {\n        setIsExpanded(true);\n      }\n    }\n  }, [search, visibleStatuses, allVisible]);\n\n  return (\n    <div className=\"task\">\n      <div className=\"pgv-tree-node-header\">\n        <a\n          href={`?selected-node=` + stage.id}\n          onClick={(e) => {\n            // Only prevent left clicks\n            if (e.button !== 0 || e.metaKey || e.ctrlKey) {\n              return;\n            }\n\n            e.preventDefault();\n\n            history.replaceState({}, \"\", `?selected-node=` + stage.id);\n            if (!isSelected) {\n              onSelect(e, String(stage.id));\n            }\n            setIsExpanded(!isExpanded);\n          }}\n          className={classNames(\"pgv-tree-item\", \"task-link\", {\n            \"task-link--active\": isSelected,\n            \"pgv-tree-item--skeleton\": stage.skeleton,\n          })}\n        >\n          <div>\n            <span className=\"task-icon-link\">\n              <StatusIcon\n                status={stage.state}\n                percentage={stage.completePercent}\n                skeleton={stage.skeleton}\n              />\n            </span>\n            <span className=\"task-link-text\">{stage.name}</span>\n            {stage.state === Result.running && (\n              <span className=\"pgv-tree-item__description\">\n                <Total ms={stage.totalDurationMillis} />\n              </span>\n            )}\n          </div>\n        </a>\n\n        {hasChildren && (\n          <button\n            className={classNames(\"pgv-toggle-icon\", {\n              \"pgv-toggle-icon--active\": isExpanded,\n            })}\n            onClick={handleToggleClick}\n            aria-label={isExpanded ? \"Collapse\" : \"Expand\"}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n              <path\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"48\"\n                d=\"M184 112l144 144-144 144\"\n              />\n            </svg>\n          </button>\n        )}\n      </div>\n\n      {hasChildren && isExpanded && (\n        <div className=\"pgv-tree-children\">\n          {stage.children.map((child) => (\n            <TreeNode\n              key={child.id}\n              stage={child}\n              selected={selected}\n              onSelect={onSelect}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n});\n\nconst filterStageTree = (\n  search: string,\n  visibleStatuses: Result[],\n  stages: StageInfo[],\n): StageInfo[] => {\n  return stages\n    .map((stage) => {\n      const filteredChildren = stage.children\n        ? filterStageTree(search, visibleStatuses, stage.children)\n        : [];\n\n      const matchesSelf =\n        stage.name.toLowerCase().includes(search.toLowerCase()) &&\n        visibleStatuses.includes(stage.state);\n\n      // Include this stage if it matches or has matching children\n      if (matchesSelf || filteredChildren.length > 0) {\n        return {\n          ...stage,\n          children: filteredChildren,\n        };\n      }\n\n      return null;\n    })\n    .filter((stage) => stage !== null);\n};\n\ninterface DataTreeViewProps {\n  stages: StageInfo[];\n  selected?: number;\n  onNodeSelect: (event: React.MouseEvent, nodeId: string) => void;\n}\n\ninterface TreeNodeProps {\n  stage: StageInfo;\n  selected: string;\n  onSelect: (event: React.MouseEvent, id: string) => void;\n}\n"],"names":["Filter","disabled","visible","setVisible","useState","visibleStatuses","toggleStatus","resetStatuses","allVisible","useFilter","statuses","Result","show","hide","jsx","Tooltip","Tippy","DefaultDropdownProps","jsxs","item","index","classNames","StatusIcon","DataTreeView","stages","selected","onNodeSelect","search","setSearch","filteredStages","filterStageTree","handleSelect","useCallback","event","nodeId","e","stage","TreeNode","React","onSelect","hasChildren","isSelected","isExpanded","setIsExpanded","hasSelectedDescendant","child","handleToggleClick","useEffect","Total","filteredChildren"],"mappings":"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"}