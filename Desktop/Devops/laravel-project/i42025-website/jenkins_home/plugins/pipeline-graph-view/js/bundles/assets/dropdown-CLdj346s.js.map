{"version":3,"file":"dropdown-CLdj346s.js","sources":["../../../../frontend/common/utils/classnames.ts","../../../../frontend/common/components/dropdown.tsx"],"sourcesContent":["export function classNames(...inputs: ClassInput[]): string {\n  return inputs\n    .flatMap((item) => {\n      if (typeof item === \"string\") return item;\n      return Object.entries(item)\n        .filter(([_, value]) => value)\n        .map(([className]) => className);\n    })\n    .join(\" \");\n}\n\ntype ClassInput = string | { [className: string]: boolean | undefined };\n","import Tippy, { TippyProps } from \"@tippyjs/react\";\nimport React, { useState } from \"react\";\nimport Tooltip from \"./tooltip.tsx\";\n\n/**\n * A customized (and customizable) implementation of Tippy dropdowns\n */\nexport default function Dropdown({ items, disabled }: DropdownProps) {\n  const [visible, setVisible] = useState(false);\n  const show = () => setVisible(true);\n  const hide = () => setVisible(false);\n\n  return (\n    <Tooltip content={\"More actions\"}>\n      <Tippy\n        visible={visible}\n        onClickOutside={hide}\n        {...DefaultDropdownProps}\n        content={\n          <div className=\"jenkins-dropdown\">\n            {items.map((item, index) => (\n              <a\n                key={index}\n                className=\"jenkins-dropdown__item\"\n                href={item.href}\n                target={item.target}\n                download={item.download}\n              >\n                <div className=\"jenkins-dropdown__item__icon\">{item.icon}</div>\n                {item.text}\n              </a>\n            ))}\n          </div>\n        }\n      >\n        <button\n          className=\"jenkins-button jenkins-button--tertiary\"\n          type=\"button\"\n          disabled={disabled}\n          onClick={visible ? hide : show}\n        >\n          <div className=\"jenkins-overflow-button__ellipsis\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        </button>\n      </Tippy>\n    </Tooltip>\n  );\n}\n\nexport const DefaultDropdownProps: TippyProps = {\n  theme: \"dropdown\",\n  duration: 250,\n  touch: true,\n  animation: \"dropdown\",\n  interactive: true,\n  offset: [0, 0],\n  placement: \"bottom-start\",\n  arrow: false,\n};\n\ninterface DropdownProps {\n  items: DropdownItem[];\n  disabled?: boolean;\n}\n\ninterface DropdownItem {\n  text: string;\n  href?: string;\n  icon: React.ReactNode;\n  target?: string;\n  download?: string;\n}\n"],"names":["classNames","inputs","item","_","value","className","Dropdown","items","disabled","visible","setVisible","useState","show","hide","jsx","Tooltip","Tippy","DefaultDropdownProps","index","jsxs"],"mappings":"sGAAO,SAASA,KAAcC,EAA8B,CACnD,OAAAA,EACJ,QAASC,GACJ,OAAOA,GAAS,SAAiBA,EAC9B,OAAO,QAAQA,CAAI,EACvB,OAAO,CAAC,CAACC,EAAGC,CAAK,IAAMA,CAAK,EAC5B,IAAI,CAAC,CAACC,CAAS,IAAMA,CAAS,CAClC,EACA,KAAK,GAAG,CACb,CCFA,SAAwBC,EAAS,CAAE,MAAAC,EAAO,SAAAC,GAA2B,CACnE,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAK,EACtCC,EAAO,IAAMF,EAAW,EAAI,EAC5BG,EAAO,IAAMH,EAAW,EAAK,EAGjC,OAAAI,EAAAA,IAACC,EAAQ,CAAA,QAAS,eAChB,SAAAD,EAAA,IAACE,EAAA,CACC,QAAAP,EACA,eAAgBI,EACf,GAAGI,EACJ,cACG,MAAI,CAAA,UAAU,mBACZ,SAAMV,EAAA,IAAI,CAACL,EAAMgB,IAChBC,EAAA,KAAC,IAAA,CAEC,UAAU,yBACV,KAAMjB,EAAK,KACX,OAAQA,EAAK,OACb,SAAUA,EAAK,SAEf,SAAA,CAAAY,EAAA,IAAC,MAAI,CAAA,UAAU,+BAAgC,SAAAZ,EAAK,KAAK,EACxDA,EAAK,IAAA,CAAA,EAPDgB,CASR,CAAA,EACH,EAGF,SAAAJ,EAAA,IAAC,SAAA,CACC,UAAU,0CACV,KAAK,SACL,SAAAN,EACA,QAASC,EAAUI,EAAOD,EAE1B,SAAAO,EAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAL,EAAA,IAAC,OAAK,EAAA,QACL,OAAK,EAAA,QACL,OAAK,CAAA,CAAA,CAAA,CACR,CAAA,CAAA,CAAA,CACF,CAAA,EAEJ,CAEJ,CAEO,MAAMG,EAAmC,CAC9C,MAAO,WACP,SAAU,IACV,MAAO,GACP,UAAW,WACX,YAAa,GACb,OAAQ,CAAC,EAAG,CAAC,EACb,UAAW,eACX,MAAO,EACT"}